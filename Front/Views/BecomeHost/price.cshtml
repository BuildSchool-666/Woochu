<div class="d-flex" id="app">
    <div class="left position-relative" style="width:50%;">
        <video autoplay controls muted loop class="video"   style="object-fit: cover; object-position:center top;">
            <source src="https://a0.muscache.com/v/55/86/558653ec-da4e-5148-b0e2-828b7a691e86/558653ecda4e5148b0e2828b7a691e86_4000k_1.mp4" type="video/mp4" style="box-sizing: border-box;" playsinline preload ="auto">
        </video>
        <h1><strong>有趣的部分來了！現在請設定價格</strong></h1>
    </div>
    <div class="right">
        <div class="d-flex">
            <div class="btngroup">
               <a href="~/BecomeHost/Index" class="btn-h"><strong>退出</strong></a>
            </div>
            <div class="pricearea">
                <h2>价格</h2>
                <div class="price">
                    <input v-model="BasicPrice" type="number" class="num" placeholder="$00" :class="{'is-invalid':PriceInput}" />
                </div>
                <p style="margin-top:-10px; margin-bottom:5vh; font-size:15px;">基本价格/每晚</p>
                <div class="price">
                    <input v-model="ServiceCharge" type="number" class="num" placeholder="$00">
                </div>
                <p style="margin-top:-10px; margin-bottom:5vh; font-size:15px;">服务费/每晚</p>
            </div>       
            <div class="last-bar">
                <a href="~/BecomeHost/description" class="back"><strong>返回</strong></a>
                <button v-on:click="createRoom" type="button" class="next text-white" id="next" :style="checkedStyle" v-bind:disabled="addVerify">确认上传</button>
            </div>
        </div>
    </div>
</div>


@section TopCSS{
<style>
    .video{
        display: block;
        height: 100vh;
        width: 100%;
        position: fixed;
        top: -30vh;
        box-sizing: border-box;
    }
    h1{
        width: 100vh;
        position: relative;
        top: 20vh;
        padding: 10px;
        font-size: 30px;
        color: white;
    }
    .right {
        width: 100%;
        height: 60vh;
        position: fixed;
        right: 0;
        bottom: -15vh;
        overflow: scroll;
        background-color: white;
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
    }
    .btngroup {
        width: 100%;
        position: fixed;
        top:0;
        right: -50%;
        background-color: transparent;
        padding-top: 20px;
        padding-bottom: 20px; 
        justify-content: flex-end;
        z-index: 0;
    }

    .btn-h {
        text-decoration: none;
        color: black;
        width: 20%;
        background-color: #F0F0F0;
        border-radius: 20px;
        border: none;
        margin: 10px;
        padding: 5px 10px;
        transition-duration: 1s;
        font-size: 10px;
    }
    .btn-h:hover {
        color: white;
        background-color: red;
    }
    .last-bar {
        position: fixed;
        width: 100%;
        right:0;
        bottom:0;   
        background-color: white;
        padding: 20px;
        border-top: 2px solid #F0F0F0;
        display: flex;
        justify-content: space-between;
    }
    .back {
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        color: white;
        width: 20vh;
        position: relative;
        top: 0;
        left: 0;
        border-radius: 10px;
        background-color: #D0D0D0;
        border: none;
        transition-duration: 1s;
    }

    .back:hover {
        background-color: black;
        color: white;
    }
    .next {
        position: relative;
        right:0;
        top:0;
        padding:10px 15px;
        width: 20vh;
        border-radius:10px;
        border: none;
        background-color: #D0D0D0;
    }

    ::-webkit-scrollbar {
        width: 0px;
    }

    .pricearea{
        position: fixed;
        top: 80vh;
        margin-left: 50px;
        width: 100%;
        height: 500px;
        padding-right: 10vh;
        text-align: center;   
    }
    .price{
        display: flex;
        justify-content: center;
        align-content: center;
        margin:30px 0px;    
        /* padding: 0px 25px; */
    }

    .num{
        width: 80%;
        height: 15vh;
        padding: 25px;
        border:1px solid #D0D0D0;
        border-radius: 10px;
        font-size: 25px;
    }
</style>
<style media="screen and (min-width:744px)">
    .left{
        float: left;
        width: 50%;
        height: 100vh;
    }
    
    .video{
        float: left;
        position: relative;
        top: 0;
    }

    h1{       
        top: -45vh;
        font-size: 40px;
    }

    .right {
        width: 50%;
        height: 100vh;
        bottom: 0;
    }


    .btngroup {
        right:-25%;
        width: 50%;
        background-color: white;
    }

    .btn-h {
        height: 35px;
        padding: 5px 15px;
    }

    .last-bar {
        width: 50%;
    
    }

    .pricearea{
        position: fixed;
        top: 20vh;
        width: 40%;
        
    }
    
</style>
}

@section EndJS{
    @*<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>*@
    @*<script>
    document.querySelector("input").onkeyup= function(){
        document.querySelector("#next").style.background="black";
        document.querySelector("#next").onclick = function(){
            location.href = "https://shichyilim.github.io/Project/legal.html";
        }
    }
    </script>*@
    <script>
        let app = new Vue({
            el:'#app',
            data:{
                BasicPrice:'',
                ServiceCharge:'',
                DataInput:{},
                PriceInput:false,
                addVerify:true
            },
            watch:{
                BasicPrice:{
                    immediate: true,
                    handler: function(){
                        if(this.BasicPrice == '')
                        {
                            this.PriceInput = true
                        }
                        else
                        {
                            this.PriceInput = false 
                        }
                        this.checkAddVerify()
                    }
                }
            },
            computed: {
                checkedStyle() {
                    return {
                        backgroundColor: this.addVerify ? '#D0D0D0' : 'black',
                    }
                }
            },
            methods:{
                checkAddVerify(){
                    if(this.PriceInput == true)
                    {
                        this.addVerify = true
                        return
                    }
                    this.addVerify = false;
                },
                createRoom() {
                        const BasicPrice = this.BasicPrice
                        const ServiceCharge = this.ServiceCharge
                        var obj = JSON.parse(sessionStorage['currentRoom'])
                        Object.assign(obj,{'BasicPrice': BasicPrice , 'ServiceCharge':ServiceCharge})
                        sessionStorage.removeItem('currentRoom');
                        sessionStorage.setItem('currentRoom',JSON.stringify(obj))
                        var Data = {}
                        var currentRoom = JSON.parse(sessionStorage['currentRoom'])
                        var facility = JSON.parse(sessionStorage['facility'])
                        var image = JSON.parse(sessionStorage['roomImg'])
                        //Object.assign(abc,Data)
                        //Object.assign({JSON.parse(sessionStorage['facility'])},this.DataInput)
                        //this.DataInput.push(JSON.parse(sessionStorage['currentRoom']))                     
                        //this.DataInput.push(JSON.parse(sessionStorage['currentRoom']))
                        //this.DataInput.push(JSON.parse(sessionStorage['facility']))
                        //data.push(JSON.parse(sessionStorage['facility']))
                        //this.DataInput = data
                        Data = {...Data, currentRoom}
                        Data = {...Data, facility}
                        Data = {...Data, image}
                        console.log(Data)

						axios.post('/api/PublishRoomAPI/Create', Data )
						.then((res) => 
						{
							console.log(res)
							if(res.data.status === 20000)
							{
								toastr.success('新增成功')
								$('#create-modal').modal('hide')
							}
							else{
								toastr.error('新增失敗')
							}
						})
						
					}
            }

        })
    </script>

}