@using Front.Models.ViewModels.Account
@model RegisterVM

@if(TempData["message"] != null)
{
    <script>alert( "@Html.Raw(@TempData["message"] )" );</script>
}
    <form method ="post">
        <div class="content" id="app">
            <div class="box w-50 m-auto border border-secondary rounded">
                <div class="title p-3 text-center border-bottom fw-bold">
                    註冊
                </div>
                <div class="Box m-5">
                    <h1>Airbnb 歡迎你</h1>
                    <label class="form-floating w-100" id="Email">
                        <input v-model="signup.account" name="Email" type="text" class="form-control" id="floatingInputValue" placeholder="Email" value="@Model?.Email" :class="{'is-invalid':signupCheck.accountError}">
                        <label for="floatingInputValue">電子郵件</label>
                        <div class="text-danger small mt-1">
                            {{signupCheck.accountErrorMsg}}
                        </div>
                    </label>
                    <label class="form-floating w-100" id="Password">
                        <input v-model="signup.password" name="Password" type="password" class="form-control" id="floatingInputValue" placeholder="Password" value="@Model?.Password" :class="{'is-invalid':signupCheck.passwordError}">
                        <label for="floatingInputValue">密码</label>
                        <div class="text-danger small mt-1">
                            {{signupCheck.passwordErrorMsg}}
                        </div>
                    </label>
                    <label class="form-floating w-100" id="PasswordConfirm">
                        <input v-model="signup.checkPassword" name="PasswordConfirm" type="password" class="form-control" id="floatingInputValue" placeholder="PasswordConfirm" value="@Model?.PasswordConfirm" :class="{'is-invalid':signupCheck.checkPasswordError}">
                        <label for="floatingInputValue">密码確認</label>
                        <div class="text-danger small mt-1">
                            {{signupCheck.checkPasswordErrorMsg}}
                        </div>
                    </label>
                    <span>我們會傳邮件，以確認您的電子郵件。<a href="#">私隱政策</a></span>
                    <button class="btn w-100 text-light mt-3 mb-3 fw-bold continue" type="submit" v-bind:disabled="addVerify">繼續</button>
                </div>
            </div>
        </div>
    </form>

@section topCSS
{
    <style>
        .content
        {
            margin-top:150px;
        }
        h1
        {
            font-size: large;
            font-weight: bold;
            margin: 20px 0px;
        }
        .continue
        {
            background-color: #ff385c;
        }
        .continue:hover
        {
            background-color: #da0b64;
        }
        span
        {
            font-size: small;
        }
        a
        {
            color: black;
            font-weight: bold;
        }
        hr.line 
        {
            border: 0;
            height: 0;
            border-top: 1px solid rgba(0,0,0,0.1);
            border-bottom: 1px solid rgba(255,255,255,0.3);
        }
        .hr-text
        {
            height: 20px;
            width: 50px;
            position: relative;
            left: 45%; 
            top: -30px;
            vertical-align: middle; 
            text-align: center;
            border-radius: 4px;
            background-color: white;
        }
        button
        {
            margin:10px 0px;
        }
        .form-floating
        {
            margin:5px 0px;
            
        }     
    </style>
}
@section endJS{
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.7/dist/vue.js"></script>
    <script>
            //聲明式渲染
            const app = new Vue({
                el:'#app',
                //資料,state
                data:{
                    //儲存註冊表單的資料
                    signup:{
                        account: '@Model?.Email',
                        password:'@Model?.Password',
                        checkPassword:'@Model?.PasswordConfirm'
                    },
                    //儲存表單驗證相關
                    signupCheck:{
                        accountError:false,
                        accountErrorMsg:'',
                        passwordError:false,
                        passwordErrorMsg:'',
                        checkPasswordError:false,
                        checkPaswordErrorMsg:'',
                    },
                    //送出按鈕驗證
                    addVerify: true
                },
                watch:{
                    'signup.account':{
                        immediate: true,
                        handler: function(){
                            if(this.signup.account =='')
                            {
                                this.signupCheck.accountError = true
                                this.signupCheck.accountErrorMsg = '帳號不得為空'
                            }
                            else if(this.signup.account.length < 8 )
                            {
                                this.signupCheck.accountError = true
                                this.signupCheck.accountErrorMsg = '帳號不得小於8碼'
                            }
                            else
                            {
                                this.signupCheck.accountError = false
                                this.signupCheck.accountErrorMsg = ''
                            }
                            this.checkAddVerify()
                        }
                    },
                    'signup.password':{
                        immediate: true,
                        handler: function()
                        {
                            this.signupCheck.checkPasswordError = false
                            this.signupCheck.checkPaswordErrorMsg = ''

                            //let passwordRegex = /^[0-9]*$/
                            //if(!passwordRegex.test(this.signup.password))
                            //{
                            //    this.signupCheck.passwordError = true
                            //    this.signupCheck.passwordErrorMsg = '密碼必須為數字'
                            //}
                            //else if(this.signup.password != '')
                            //{
                            //    this.signupCheck.passwordError = true
                            //    this.signupCheck.passwordErrorMsg = '密碼與第一次輸入不吻合'
                            //}
                            //else
                            //{
                            //    this.signupCheck.passwordError = false
                            //    this.signupCheck.passwordErrorMsg = ''
                            //}
                            this.checkAddVerify()
                        }
                    },
                    'signup.checkPassword':{
                        immediate: false,
                        handler: function(){
                            if(this.signup.checkPassword != this.signup.password)
                            {
                                this.signupCheck.checkPasswordError = true
                                this.signupCheck.checkPasswordErrorMsg = '密碼與第一次輸入不吻合'
                            }
                            else
                            {
                                this.signupCheck.checkPasswordError = false
                                this.signupCheck.checkPasswordErrorMsg = ''
                            }
                            this.checkAddVerify();
                        }
                    }
                },
                methods:{
                    checkAddVerify(){
                        for(let prop in this.signupCheck)
                        {
                            if(this.signupCheck[prop] == true)
                            {
                                this.addVerify = true
                                return
                            }
                            this.addVerify = false;
                        }
                    }
                }   
            })
        </script>
}
        

